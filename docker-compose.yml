version: "3"

services:
  # change to official image when available https://github.com/radiantearth/stac-browser/pull/386
  stac-browser:
    build:
      context: dockerfiles
      dockerfile: Dockerfile.browser
    ports:
      - "${MY_DOCKER_IP:-127.0.0.1}:8085:8085"
    depends_on:
      - stac-fastapi
      - titiler-pgstac
      - database

  stac-fastapi:
    # Note:
    # the official ghcr.io/stac-utils/stac-fastapi-pgstac image uses python 3.8 and uvicorn
    # which is why here we use a custom Dockerfile using python 3.11 and gunicorn
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.stac
    ports:
      - "${MY_DOCKER_IP:-127.0.0.1}:8081:8081"
    environment:
      # Application
      - HOST=0.0.0.0
      - PORT=8081
      - MODULE_NAME=eoapi.stac.app
      - VARIABLE_NAME=app
      # gunicorn
      # https://github.com/tiangolo/uvicorn-gunicorn-docker#web_concurrency
      - WEB_CONCURRENCY=1
      # https://github.com/tiangolo/uvicorn-gunicorn-docker#workers_per_core
      - WORKERS_PER_CORE=1
      # https://github.com/tiangolo/uvicorn-gunicorn-docker#max_workers
      - MAX_WORKERS=10
      # Postgres connection
      - POSTGRES_USER=username
      - POSTGRES_PASS=password
      - POSTGRES_DBNAME=postgis
      - POSTGRES_HOST_READER=database
      - POSTGRES_HOST_WRITER=database
      - POSTGRES_PORT=5432
      - DB_MIN_CONN_SIZE=1
      - DB_MAX_CONN_SIZE=10
    depends_on:
      - database
    command: bash -c "bash /tmp/scripts/wait-for-it.sh -t 120 -h database -p 5432 && /start-reload.sh"
    volumes:
      - ./dockerfiles/scripts:/tmp/scripts
      - ./runtime/eoapi/stac:/app/stac

  titiler-pgstac:
    # At the time of writing, rasterio and psycopg wheels are not available for arm64 arch
    # so we force the image to be built with linux/amd64
    platform: linux/amd64
    image: ghcr.io/stac-utils/titiler-pgstac:1.0.0a3
    ports:
      - "${MY_DOCKER_IP:-127.0.0.1}:8082:8082"
    environment:
      # Application
      - HOST=0.0.0.0
      - PORT=8082
      # https://github.com/tiangolo/uvicorn-gunicorn-docker#web_concurrency
      - WEB_CONCURRENCY=1
      # https://github.com/tiangolo/uvicorn-gunicorn-docker#workers_per_core
      - WORKERS_PER_CORE=1
      # https://github.com/tiangolo/uvicorn-gunicorn-docker#max_workers
      - MAX_WORKERS=10
      # Postgres connection
      - POSTGRES_USER=username
      - POSTGRES_PASS=password
      - POSTGRES_DBNAME=postgis
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - DB_MIN_CONN_SIZE=1
      - DB_MAX_CONN_SIZE=10
      # - DB_MAX_QUERIES=10
      # - DB_MAX_IDLE=10
      # GDAL Config
      - CPL_TMPDIR=/tmp
      - GDAL_CACHEMAX=75%
      - GDAL_INGESTED_BYTES_AT_OPEN=32768
      - GDAL_DISABLE_READDIR_ON_OPEN=EMPTY_DIR
      - GDAL_HTTP_MERGE_CONSECUTIVE_RANGES=YES
      - GDAL_HTTP_MULTIPLEX=YES
      - GDAL_HTTP_VERSION=2
      - VSI_CACHE=TRUE
      - VSI_CACHE_SIZE=536870912
      # TiTiler Config
      - MOSAIC_CONCURRENCY=1
      # AWS S3 endpoint config
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    depends_on:
      - database
    command: bash -c "bash /tmp/scripts/wait-for-it.sh -t 120 -h database -p 5432 && /start.sh"
    volumes:
      - ./dockerfiles/scripts:/tmp/scripts

  tipg:
    image: ghcr.io/developmentseed/tipg:0.5.0
    ports:
      - "${MY_DOCKER_IP:-127.0.0.1}:8083:8083"
    environment:
      # Application
      - HOST=0.0.0.0
      - PORT=8083
      # https://github.com/tiangolo/uvicorn-gunicorn-docker#web_concurrency
      - WEB_CONCURRENCY=1
      # https://github.com/tiangolo/uvicorn-gunicorn-docker#workers_per_core
      - WORKERS_PER_CORE=1
      # https://github.com/tiangolo/uvicorn-gunicorn-docker#max_workers
      - MAX_WORKERS=10
      # Postgres connection
      - POSTGRES_USER=username
      - POSTGRES_PASS=password
      - POSTGRES_DBNAME=postgis
      - POSTGRES_HOST=database
      - POSTGRES_PORT=5432
      - DB_MIN_CONN_SIZE=1
      - DB_MAX_CONN_SIZE=10
    command: bash -c "bash /tmp/scripts/wait-for-it.sh -t 120 -h database -p 5432 && /start.sh"
    depends_on:
      - database
    volumes:
      - ./dockerfiles/scripts:/tmp/scripts

  database:
    image: ghcr.io/stac-utils/pgstac:v0.8.1
    environment:
      - POSTGRES_USER=username
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgis
      - PGUSER=username
      - PGPASSWORD=password
      - PGDATABASE=postgis
      - POSTGRES_MULTIPLE_DATABASES=spicedb
    ports:
      - "${MY_DOCKER_IP:-127.0.0.1}:5439:5432"
    command: postgres -N 500
    volumes:
      - ./dockerfiles/scripts/docker-postgresql-multiple-databases.sh:/docker-entrypoint-initdb.d/docker-postgresql-multiple-databases.sh
      - ./.pgdata:/var/lib/postgresql/data

  spicedb-migrate:
    image: authzed/spicedb
    command: migrate head
    restart: on-failure
    environment:
      - SPICEDB_DATASTORE_ENGINE=postgres
      - SPICEDB_DATASTORE_CONN_URI=postgres://username:password@database:5432/spicedb?sslmode=disable
    depends_on:
      - database

  spicedb:
    image: authzed/spicedb
    command: serve --http-enabled
    restart: always
    ports:
      - 8443:8443 # HTTP API
      - 9090:9090 # Prometheus metrics
      - 50051:50051 # gRPC API
    environment:
      - SPICEDB_GRPC_PRESHARED_KEY="eoapi-secret-token"
      - SPICEDB_DATASTORE_ENGINE=postgres
      - SPICEDB_DATASTORE_CONN_URI=postgres://username:password@database:5432/spicedb?sslmode=disable
      - SPICEDB_HTTP_ENABLED=true
    depends_on:
      - spicedb-migrate

  spicedb-init:
    image: authzed/zed
    command: import file:///home/spicedb/zed.yaml
    restart: on-failure
    environment:
      - ZED_ENDPOINT=spicedb:50051
      - ZED_INSECURE=true
      - ZED_TOKEN=eoapi-secret-token
    volumes:
      - type: bind
        source: ./runtime/spicedb/init
        target: /home/spicedb
    depends_on:
      - spicedb

  spicedb-ui:
    build:
      context: ./runtime/spicedb/spicedb-ui

    # Set environment variables directly in the docker-compose file
    environment:
      - SPICEDB_TOKEN=eoapi-secret-token
    volumes:
      - ./runtime/spicedb/spicedb-ui/src:/app/src
      - ./runtime/spicedb/spicedb-ui/public:/app/public
    restart: always
    ports:
      - 3000:3000

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
      - "9990:9990"
    command: start-dev --import-realm
    volumes:
      - ./auth/authentication/eoapi-realm.json:/opt/keycloak/data/import/eoapi-realm.json

networks:
  default:
    name: eoapi-network
